<Activity mc:Ignorable="sap sap2010" x:Class="ReadExceptionReport" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_Config" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="in_InputFilePath" Type="InArgument(x:String)" />
    <x:Property Name="out_ExceptionReportDT" Type="OutArgument(sd:DataTable)" />
    <x:Property Name="out_StoreNumberExceptionReport" Type="OutArgument(x:String)" />
    <x:Property Name="out_ExceptionReportFileName" Type="OutArgument(x:String)" />
    <x:Property Name="out_TransactionNumber" Type="OutArgument(x:Int32)" />
    <x:Property Name="in_FilterWeeklyDtAudit" Type="InArgument(sd:DataTable)" />
    <x:Property Name="in_RowIndexWeeklySchedReport" Type="InArgument(x:Int32)" />
    <x:Property Name="out_AuditorMail" Type="OutArgument(x:String)" />
    <x:Property Name="in_WeeklyReportDT" Type="InArgument(sd:DataTable)" />
    <x:Property Name="out_StartTimeExceptionReport" Type="OutArgument(x:String)" />
    <x:Property Name="out_ExceptionReportUploadedTime" Type="OutArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1507,6815</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ActivityBuilder_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>System.Xml.Serialization</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Sequence- Read Existing Exception Report" sap:VirtualizedContainerService.HintSize="1487,6755" sap2010:WorkflowViewState.IdRef="Sequence_2">
    <Sequence.Variables>
      <Variable x:TypeArguments="ui:WorkbookApplication" Name="wbExpReport" />
      <Variable x:TypeArguments="x:String" Name="exceptionReportFileName" />
      <Variable x:TypeArguments="x:String" Name="Attachment" />
      <Variable x:TypeArguments="x:String" Name="bodyMail" />
      <Variable x:TypeArguments="x:String" Name="subjectMail" />
      <Variable x:TypeArguments="x:String" Name="checkExcpText" />
      <Variable x:TypeArguments="sd:DataTable" Name="exceptionDT" />
      <Variable x:TypeArguments="x:String" Name="storeNumberWeeklyScheduleReport" />
      <Variable x:TypeArguments="x:String" Name="exceptionReportByStoreNum" />
      <Variable x:TypeArguments="x:Int32" Name="storeFlag" />
      <Variable x:TypeArguments="x:String" Name="auditorMailWeeklyRep" />
      <Variable x:TypeArguments="x:String" Name="auditorNameWeeklyRep" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <If Condition="[in_RowIndexWeeklySchedReport&lt;=in_FilterWeeklyDtAudit.Rows.Count-1]" DisplayName="If- Iterate till Weekly DT count" sap:VirtualizedContainerService.HintSize="1445,51" sap2010:WorkflowViewState.IdRef="If_8">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <If.Then>
        <Sequence sap:VirtualizedContainerService.HintSize="380,283" sap2010:WorkflowViewState.IdRef="Sequence_17">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="338,191" sap2010:WorkflowViewState.IdRef="MultipleAssign_1">
            <ui:MultipleAssign.AssignOperations>
              <scg:List x:TypeArguments="ui:AssignOperation" Capacity="8">
                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_1">
                  <ui:AssignOperation.To>
                    <OutArgument x:TypeArguments="x:String">[storeNumberWeeklyScheduleReport]</OutArgument>
                  </ui:AssignOperation.To>
                  <ui:AssignOperation.Value>
                    <InArgument x:TypeArguments="x:String">[in_FilterWeeklyDtAudit.Rows(in_RowIndexWeeklySchedReport)(CINT(in_Config("Store_Col_Index_WeekReport").ToString)).ToString]</InArgument>
                  </ui:AssignOperation.Value>
                </ui:AssignOperation>
                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_2">
                  <ui:AssignOperation.To>
                    <OutArgument x:TypeArguments="x:String">[auditorMailWeeklyRep]</OutArgument>
                  </ui:AssignOperation.To>
                  <ui:AssignOperation.Value>
                    <InArgument x:TypeArguments="x:String">[in_FilterWeeklyDtAudit.Rows(in_RowIndexWeeklySchedReport)(CInt(in_Config("Email_Col_Index_WeeklyRep").ToString)).ToString]</InArgument>
                  </ui:AssignOperation.Value>
                </ui:AssignOperation>
                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_3">
                  <ui:AssignOperation.To>
                    <OutArgument x:TypeArguments="x:String">[auditorNameWeeklyRep]</OutArgument>
                  </ui:AssignOperation.To>
                  <ui:AssignOperation.Value>
                    <InArgument x:TypeArguments="x:String">[in_FilterWeeklyDtAudit.Rows(in_RowIndexWeeklySchedReport)(CInt(in_Config("Name_Col_Index_WeeklyRep").ToString)).ToString]</InArgument>
                  </ui:AssignOperation.Value>
                </ui:AssignOperation>
                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_4">
                  <ui:AssignOperation.To>
                    <OutArgument x:TypeArguments="x:String">[out_AuditorMail]</OutArgument>
                  </ui:AssignOperation.To>
                  <ui:AssignOperation.Value>
                    <InArgument x:TypeArguments="x:String">[auditorMailWeeklyRep]</InArgument>
                  </ui:AssignOperation.Value>
                </ui:AssignOperation>
              </scg:List>
            </ui:MultipleAssign.AssignOperations>
          </ui:MultipleAssign>
        </Sequence>
      </If.Then>
      <If.Else>
        <Sequence sap:VirtualizedContainerService.HintSize="376,345" sap2010:WorkflowViewState.IdRef="Sequence_18">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_20" Level="Info" Message="[&quot;All stores Processed for Today&quot;]" />
          <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_42">
            <Assign.To>
              <OutArgument x:TypeArguments="x:Int32">[storeFlag]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:Int32">1</InArgument>
            </Assign.Value>
          </Assign>
          <Throw Exception="[new Exception(&quot;All Store reports processed for today&quot;+&quot;$&quot;+storeFlag.ToString)]" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="Throw_11" />
        </Sequence>
      </If.Else>
    </If>
    <If Condition="[Directory.GetFiles(in_InputFilePath).Length&gt;0]" DisplayName="If- Check Input Folder Contains Exception Report" sap:VirtualizedContainerService.HintSize="1445,6572" sap2010:WorkflowViewState.IdRef="If_2">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <If.Then>
        <Sequence sap:VirtualizedContainerService.HintSize="1200,6424" sap2010:WorkflowViewState.IdRef="Sequence_5">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Assign sap:VirtualizedContainerService.HintSize="1158,60" sap2010:WorkflowViewState.IdRef="Assign_6">
            <Assign.To>
              <OutArgument x:TypeArguments="x:Int32">[out_TransactionNumber]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:Int32">[1]</InArgument>
            </Assign.Value>
          </Assign>
          <If Condition="[String.IsNullOrEmpty(storeNumberWeeklyScheduleReport.Trim)]" sap:VirtualizedContainerService.HintSize="1158,593" sap2010:WorkflowViewState.IdRef="If_10">
            <If.Then>
              <Sequence sap:VirtualizedContainerService.HintSize="376,445" sap2010:WorkflowViewState.IdRef="Sequence_25">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_23" Level="Error" Message="[&quot;Store Number does not exist in Weekly Schedule Report&quot;]" />
                <Assign DisplayName="Assign Subject Mail" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_45">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[subjectMail]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">["Store Number not found in Weekly Schedule Report"]</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign DisplayName="Assign Body Mail" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_46">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[bodyMail]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">["Store Number not found in Weekly Schedule Report and because of that BOT did not process this record. Kindly check and update Store number."]</InArgument>
                  </Assign.Value>
                </Assign>
                <Throw DisplayName="Throw- Exception" Exception="[new Exception(subjectMail+&quot;$&quot;+bodyMail+&quot;$&quot;+auditorMailWeeklyRep)]" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="Throw_13" />
              </Sequence>
            </If.Then>
            <If.Else>
              <Assign DisplayName="Assign- Exp Report by Store" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_36">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[exceptionReportByStoreNum]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[Directory.GetFiles(in_InputFilePath,"*.xlsx",SearchOption.AllDirectories).Where(Function(d) d.ToLower.ToString.Contains(storeNumberWeeklyScheduleReport))(0)]</InArgument>
                </Assign.Value>
              </Assign>
            </If.Else>
          </If>
          <If Condition="[NOT String.IsNullOrEmpty(exceptionReportByStoreNum)]" DisplayName="If- Check Exception Report Available for Store Number" sap:VirtualizedContainerService.HintSize="1158,720" sap2010:WorkflowViewState.IdRef="If_9">
            <If.Then>
              <Sequence sap:VirtualizedContainerService.HintSize="376,383" sap2010:WorkflowViewState.IdRef="Sequence_26">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_21" Level="Info" Message="[&quot;Exception Report Based on Store Number:- &quot;+exceptionReportByStoreNum]" />
                <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_47">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[out_ExceptionReportUploadedTime]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[file.GetLastWriteTime(exceptionReportByStoreNum).ToString("MM-dd-yy hh:mm:ss tt")]</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign DisplayName="Assign- Start Time Exception Report" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_48">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[out_StartTimeExceptionReport]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[now.ToString("hh:mm:ss tt")]</InArgument>
                  </Assign.Value>
                </Assign>
              </Sequence>
            </If.Then>
            <If.Else>
              <Sequence sap:VirtualizedContainerService.HintSize="376,572" sap2010:WorkflowViewState.IdRef="Sequence_24">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_22" Level="Info" Message="[&quot;Exception Report Not Available for the Store Number:- &quot;+storeNumberWeeklyScheduleReport]" />
                <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke WriteStatusRemarkWeeklyReport workflow" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="Files\WriteStatusRemarkWeeklyReport.xaml">
                  <ui:InvokeWorkflowFile.Arguments>
                    <InArgument x:TypeArguments="sd:DataTable" x:Key="in_WeeklyReportDT">[in_WeeklyReportDT]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_Status">Failed</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_Remarks">Exception Report Not Available</InArgument>
                    <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_Config]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_StoreNumberWeeklyScheduleReport">[storeNumberWeeklyScheduleReport]</InArgument>
                  </ui:InvokeWorkflowFile.Arguments>
                </ui:InvokeWorkflowFile>
                <Assign DisplayName="Assign Subject Mail" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_43">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[subjectMail]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">["ARS- Exception Report Not Available"]</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign DisplayName="Assign Body Mail" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_44">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[bodyMail]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">["Exception Report Not Available for Store: "+storeNumberWeeklyScheduleReport]</InArgument>
                  </Assign.Value>
                </Assign>
                <Throw DisplayName="Throw- Exception" Exception="[new Exception(subjectMail+&quot;$&quot;+bodyMail+&quot;$&quot;+auditorMailWeeklyRep)]" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="Throw_12" />
              </Sequence>
            </If.Else>
          </If>
          <Assign DisplayName="Assign- Exception Report Name" sap:VirtualizedContainerService.HintSize="1158,60" sap2010:WorkflowViewState.IdRef="Assign_2">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[exceptionReportFileName]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[path.GetFileName(exceptionReportByStoreNum).Trim]</InArgument>
            </Assign.Value>
          </Assign>
          <Assign DisplayName="Assign- Pass Exception Report Name" sap:VirtualizedContainerService.HintSize="1158,60" sap2010:WorkflowViewState.IdRef="Assign_5">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[out_ExceptionReportFileName]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[exceptionReportFileName]</InArgument>
            </Assign.Value>
          </Assign>
          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="1158,91" sap2010:WorkflowViewState.IdRef="LogMessage_4" Level="Info" Message="[&quot;Exception Report Name: &quot;+exceptionReportFileName]" />
          <Assign DisplayName="Assign- Pass Store Number For Exception Report" sap:VirtualizedContainerService.HintSize="1158,60" sap2010:WorkflowViewState.IdRef="Assign_37">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[out_StoreNumberExceptionReport]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[storeNumberWeeklyScheduleReport]</InArgument>
            </Assign.Value>
          </Assign>
          <ui:CopyFile ContinueOnError="{x:Null}" Destination="[in_Config(&quot;Exception_ARSFolder&quot;).ToString+ExceptionReportFileName]" DisplayName="Copy File- Exception Template" sap:VirtualizedContainerService.HintSize="1158,157" sap2010:WorkflowViewState.IdRef="CopyFile_1" Overwrite="True" Path="[exceptionReportByStoreNum]" />
          <TryCatch DisplayName="Try Catch- Read Exception Report" sap:VirtualizedContainerService.HintSize="1158,1531" sap2010:WorkflowViewState.IdRef="TryCatch_1">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <TryCatch.Try>
              <ui:ExcelApplicationScope Password="{x:Null}" CreateNewFile="False" DisplayName="Excel Application Scope- Read Exception Report From Input File" sap:VirtualizedContainerService.HintSize="421,391" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_1" Visible="False" Workbook="[wbExpReport]" WorkbookPath="[in_Config(&quot;Exception_ARSFolder&quot;).ToString+ExceptionReportFileName]">
                <ui:ExcelApplicationScope.Body>
                  <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                    </ActivityAction.Argument>
                    <Sequence DisplayName="Do- Read Exception Report" sap:VirtualizedContainerService.HintSize="336,282" sap2010:WorkflowViewState.IdRef="Sequence_4">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:ExcelReadRange AddHeaders="True" DataTable="[exceptionDT]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="314,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_1" Range="A10" SheetName="[wbExpReport.GetSheets(0)]" />
                      <ui:ExcelReadCell Cell="Q10" DisplayName="Read Cell - check Excp. Text" sap:VirtualizedContainerService.HintSize="314,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_1" SheetName="[wbExpReport.GetSheets(0)]">
                        <ui:ExcelReadCell.Result>
                          <OutArgument x:TypeArguments="x:String">[checkExcpText]</OutArgument>
                        </ui:ExcelReadCell.Result>
                      </ui:ExcelReadCell>
                    </Sequence>
                  </ActivityAction>
                </ui:ExcelApplicationScope.Body>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:ExcelApplicationScope>
            </TryCatch.Try>
            <TryCatch.Catches>
              <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="775,1369" sap2010:WorkflowViewState.IdRef="Catch`1_1">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ActivityAction x:TypeArguments="s:Exception">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                  </ActivityAction.Argument>
                  <Sequence sap:VirtualizedContainerService.HintSize="769,1300" sap2010:WorkflowViewState.IdRef="Sequence_7">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <If Condition="[exception.Message.Contains(&quot;Exception from HRESULT&quot;) OR exception.Message.Contains(&quot;Make sure Excel is installed&quot;)]" sap:VirtualizedContainerService.HintSize="747,1176" sap2010:WorkflowViewState.IdRef="If_11">
                      <If.Then>
                        <Sequence sap:VirtualizedContainerService.HintSize="336,531" sap2010:WorkflowViewState.IdRef="Sequence_27">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="314,91" sap2010:WorkflowViewState.IdRef="LogMessage_24" Level="Info" Message="[&quot;Read Error For Exception Report &quot;]" />
                          <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke KillAllProcesses workflow" sap:VirtualizedContainerService.HintSize="314,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_6" UnSafe="False" WorkflowFileName="Framework\KillAllProcesses.xaml">
                            <ui:InvokeWorkflowFile.Arguments>
                              <scg:Dictionary x:TypeArguments="x:String, Argument" />
                            </ui:InvokeWorkflowFile.Arguments>
                          </ui:InvokeWorkflowFile>
                          <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke WriteStatusRemarkWeeklyReport workflow" sap:VirtualizedContainerService.HintSize="314,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_7" UnSafe="False" WorkflowFileName="Files\WriteStatusRemarkWeeklyReport.xaml">
                            <ui:InvokeWorkflowFile.Arguments>
                              <InArgument x:TypeArguments="sd:DataTable" x:Key="in_WeeklyReportDT">[in_WeeklyReportDT]</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="in_Status">Failed</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="in_Remarks">Failed to read Exception Report</InArgument>
                              <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_Config]</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="in_StoreNumberWeeklyScheduleReport">[storeNumberWeeklyScheduleReport]</InArgument>
                            </ui:InvokeWorkflowFile.Arguments>
                          </ui:InvokeWorkflowFile>
                          <Throw DisplayName="Throw - BusinessRule Exception" Exception="[New BusinessRuleException(&quot;Exception Report Read Error&quot;)]" sap:VirtualizedContainerService.HintSize="314,22" sap2010:WorkflowViewState.IdRef="Throw_14" />
                        </Sequence>
                      </If.Then>
                      <If.Else>
                        <Sequence sap:VirtualizedContainerService.HintSize="386,1028" sap2010:WorkflowViewState.IdRef="Sequence_8">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="364,91" sap2010:WorkflowViewState.IdRef="LogMessage_8" Level="Error" Message="[&quot;Error at reading exception report: &quot;+exception.Message]" />
                          <Assign DisplayName="Assign Subject Mail" sap:VirtualizedContainerService.HintSize="364,60" sap2010:WorkflowViewState.IdRef="Assign_12">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[subjectMail]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">Corrupted File or Row Mismatch</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign DisplayName="Assign Body Mail" sap:VirtualizedContainerService.HintSize="364,60" sap2010:WorkflowViewState.IdRef="Assign_11">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[bodyMail]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[storeNumberWeeklyScheduleReport+" ExceptionReportLandscape.xlsx is a Corrupted File. Please Verify and Reupload the file."]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke KillAllProcesses workflow" sap:VirtualizedContainerService.HintSize="364,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_8" UnSafe="False" WorkflowFileName="Framework\KillAllProcesses.xaml">
                            <ui:InvokeWorkflowFile.Arguments>
                              <scg:Dictionary x:TypeArguments="x:String, Argument" />
                            </ui:InvokeWorkflowFile.Arguments>
                          </ui:InvokeWorkflowFile>
                          <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke WriteStatusRemarkWeeklyReport workflow" sap:VirtualizedContainerService.HintSize="364,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="Files\WriteStatusRemarkWeeklyReport.xaml">
                            <ui:InvokeWorkflowFile.Arguments>
                              <InArgument x:TypeArguments="sd:DataTable" x:Key="in_WeeklyReportDT">[in_WeeklyReportDT]</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="in_Status">Failed</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="in_Remarks">File is not Available in Readable Format Or Corrupted</InArgument>
                              <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_Config]</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="in_StoreNumberWeeklyScheduleReport">[storeNumberWeeklyScheduleReport]</InArgument>
                            </ui:InvokeWorkflowFile.Arguments>
                          </ui:InvokeWorkflowFile>
                          <ui:MoveFile ContinueOnError="{x:Null}" Destination="[in_Config(&quot;InvalidFiles_ReportPath&quot;).ToString]" DisplayName="Move File- Exception Report" sap:VirtualizedContainerService.HintSize="364,157" sap2010:WorkflowViewState.IdRef="MoveFile_10" Overwrite="True" Path="[in_Config(&quot;Exception_ARSFolder&quot;).ToString+ExceptionReportFileName]">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:MoveFile>
                          <Assign DisplayName="Assign Excp Attachment" sap:VirtualizedContainerService.HintSize="364,60" sap2010:WorkflowViewState.IdRef="Assign_9">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[Attachment]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[Directory.GetFiles(in_Config("InvalidFiles_ReportPath").ToString,storeNumberWeeklyScheduleReport+"*.xlsx")(0)]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Throw DisplayName="Throw - BusinessRule Exception" Exception="[New BusinessRuleException(subjectMail+&quot;$&quot;+bodyMail+&quot;$&quot;+Attachment+&quot;$&quot;+storeNumberWeeklyScheduleReport)]" sap:VirtualizedContainerService.HintSize="364,22" sap2010:WorkflowViewState.IdRef="Throw_2" />
                        </Sequence>
                      </If.Else>
                    </If>
                  </Sequence>
                </ActivityAction>
              </Catch>
            </TryCatch.Catches>
          </TryCatch>
          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="1158,91" sap2010:WorkflowViewState.IdRef="LogMessage_14" Level="Info" Message="[&quot;Closing Exception Report&quot;]" />
          <ui:ExcelCloseWorkbook DisplayName="Close Workbook" sap:VirtualizedContainerService.HintSize="1158,59" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_3" Workbook="[wbExpReport]" />
          <If Condition="[String.IsNullOrEmpty(checkExcpText)]" DisplayName="Row is Empty or Not starting from corresponding row" sap:VirtualizedContainerService.HintSize="1158,1321" sap2010:WorkflowViewState.IdRef="If_4">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <If.Then>
              <Sequence sap:VirtualizedContainerService.HintSize="386,901" sap2010:WorkflowViewState.IdRef="Sequence_9">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="364,91" sap2010:WorkflowViewState.IdRef="LogMessage_9" Level="Error" Message="[&quot;Exception report data is not starting from corresponding row&quot;]" />
                <Assign DisplayName="Assign Subject Mail" sap:VirtualizedContainerService.HintSize="364,60" sap2010:WorkflowViewState.IdRef="Assign_14">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[subjectMail]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[storeNumberWeeklyScheduleReport+" Exception Report - Improper Data"]</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign DisplayName="Assign Body Mail" sap:VirtualizedContainerService.HintSize="364,60" sap2010:WorkflowViewState.IdRef="Assign_13">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[bodyMail]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[storeNumberWeeklyScheduleReport+" ExceptionReportLandscape.xlsx file data is not starting from corresponding row."]</InArgument>
                  </Assign.Value>
                </Assign>
                <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke WriteStatusRemarkWeeklyReport workflow" sap:VirtualizedContainerService.HintSize="364,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_3" UnSafe="False" WorkflowFileName="Files\WriteStatusRemarkWeeklyReport.xaml">
                  <ui:InvokeWorkflowFile.Arguments>
                    <InArgument x:TypeArguments="sd:DataTable" x:Key="in_WeeklyReportDT">[in_WeeklyReportDT]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_Status">Failed</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_Remarks">Datat is not Strating From Corresponding Row</InArgument>
                    <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_Config]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_StoreNumberWeeklyScheduleReport">[storeNumberWeeklyScheduleReport]</InArgument>
                  </ui:InvokeWorkflowFile.Arguments>
                </ui:InvokeWorkflowFile>
                <ui:MoveFile ContinueOnError="{x:Null}" Destination="[in_Config(&quot;InvalidFiles_ReportPath&quot;).ToString]" DisplayName="Move File- Exception Report" sap:VirtualizedContainerService.HintSize="364,157" sap2010:WorkflowViewState.IdRef="MoveFile_11" Overwrite="True" Path="[in_Config(&quot;Exception_ARSFolder&quot;).ToString+ExceptionReportFileName]">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:MoveFile>
                <Assign DisplayName="Assign Excp Attachment" sap:VirtualizedContainerService.HintSize="364,60" sap2010:WorkflowViewState.IdRef="Assign_26">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[Attachment]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[Directory.GetFiles(in_Config("InvalidFiles_ReportPath").ToString,storeNumberWeeklyScheduleReport+"*.xlsx")(0)]</InArgument>
                  </Assign.Value>
                </Assign>
                <Throw DisplayName="Throw - BusinessRule Exception" Exception="[New BusinessRuleException(subjectMail+&quot;$&quot;+bodyMail+&quot;$&quot;+Attachment+&quot;$&quot;+storeNumberWeeklyScheduleReport)]" sap:VirtualizedContainerService.HintSize="364,22" sap2010:WorkflowViewState.IdRef="Throw_7" />
              </Sequence>
            </If.Then>
            <If.Else>
              <Sequence sap:VirtualizedContainerService.HintSize="747,1173" sap2010:WorkflowViewState.IdRef="Sequence_15">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If Condition="[checkExcpText.ToString.Trim.ToLower.Equals(&quot;excp&quot;)]" sap:VirtualizedContainerService.HintSize="725,1049" sap2010:WorkflowViewState.IdRef="If_7">
                  <If.Then>
                    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="314,91" sap2010:WorkflowViewState.IdRef="LogMessage_17" Level="Info" Message="[&quot;Exception report data is proper and starting from correct cell&quot;]" />
                  </If.Then>
                  <If.Else>
                    <Sequence sap:VirtualizedContainerService.HintSize="386,901" sap2010:WorkflowViewState.IdRef="Sequence_14">
                      <Sequence.Variables>
                        <Variable x:TypeArguments="x:String" Name="Attachment" />
                      </Sequence.Variables>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="364,91" sap2010:WorkflowViewState.IdRef="LogMessage_18" Level="Error" Message="[&quot;Exception report data is not starting from corresponding row&quot;]" />
                      <Assign DisplayName="Assign Subject Mail" sap:VirtualizedContainerService.HintSize="364,60" sap2010:WorkflowViewState.IdRef="Assign_31">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[subjectMail]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[storeNumberWeeklyScheduleReport+" Exception Report - Improper Data"]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <Assign DisplayName="Assign Body Mail" sap:VirtualizedContainerService.HintSize="364,60" sap2010:WorkflowViewState.IdRef="Assign_32">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[bodyMail]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[storeNumberWeeklyScheduleReport+" ExceptionReportLandscape.xlsx file data is not starting from corresponding row."]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke WriteStatusRemarkWeeklyReport workflow" sap:VirtualizedContainerService.HintSize="364,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_4" UnSafe="False" WorkflowFileName="Files\WriteStatusRemarkWeeklyReport.xaml">
                        <ui:InvokeWorkflowFile.Arguments>
                          <InArgument x:TypeArguments="sd:DataTable" x:Key="in_WeeklyReportDT">[in_WeeklyReportDT]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="in_Status">Failed</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="in_Remarks">Data is Not Starting From Corresponding Row</InArgument>
                          <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_Config]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="in_StoreNumberWeeklyScheduleReport">[storeNumberWeeklyScheduleReport]</InArgument>
                        </ui:InvokeWorkflowFile.Arguments>
                      </ui:InvokeWorkflowFile>
                      <ui:MoveFile ContinueOnError="{x:Null}" Destination="[in_Config(&quot;InvalidFiles_ReportPath&quot;).ToString]" DisplayName="Move File- Exception Report" sap:VirtualizedContainerService.HintSize="364,157" sap2010:WorkflowViewState.IdRef="MoveFile_12" Overwrite="True" Path="[in_Config(&quot;Exception_ARSFolder&quot;).ToString+ExceptionReportFileName]">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:MoveFile>
                      <Assign DisplayName="Assign Excp Attachment" sap:VirtualizedContainerService.HintSize="364,60" sap2010:WorkflowViewState.IdRef="Assign_33">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[Attachment]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[Directory.GetFiles(in_Config("InvalidFiles_ReportPath").ToString,storeNumberWeeklyScheduleReport+"*.xlsx")(0)]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <Throw DisplayName="Throw - BusinessRule Exception" Exception="[New BusinessRuleException(subjectMail+&quot;$&quot;+bodyMail+&quot;$&quot;+Attachment+&quot;$&quot;+storeNumberWeeklyScheduleReport)]" sap:VirtualizedContainerService.HintSize="364,22" sap2010:WorkflowViewState.IdRef="Throw_10" />
                    </Sequence>
                  </If.Else>
                </If>
              </Sequence>
            </If.Else>
          </If>
          <If Condition="[exceptionDT.Rows.Count   &gt; 0]" DisplayName="Data Table is Empty or Not" sap:VirtualizedContainerService.HintSize="1158,1049" sap2010:WorkflowViewState.IdRef="If_6">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <If.Then>
              <Sequence sap:VirtualizedContainerService.HintSize="336,377" sap2010:WorkflowViewState.IdRef="Sequence_16">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="314,91" sap2010:WorkflowViewState.IdRef="LogMessage_13" Level="Info" Message="[&quot;Exception Report contains data and Exception Report name is  - &quot;+exceptionReportFileName]" />
                <Assign sap:VirtualizedContainerService.HintSize="314,60" sap2010:WorkflowViewState.IdRef="Assign_34">
                  <Assign.To>
                    <OutArgument x:TypeArguments="sd:DataTable">[out_ExceptionReportDT]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="sd:DataTable">[exceptionDT]</InArgument>
                  </Assign.Value>
                </Assign>
                <ui:Delete ContinueOnError="{x:Null}" sap:VirtualizedContainerService.HintSize="314,22" sap2010:WorkflowViewState.IdRef="Delete_1" Path="[in_Config(&quot;Exception_ARSFolder&quot;).ToString+ExceptionReportFileName]" />
              </Sequence>
            </If.Then>
            <If.Else>
              <Sequence sap:VirtualizedContainerService.HintSize="386,901" sap2010:WorkflowViewState.IdRef="Sequence_13">
                <Sequence.Variables>
                  <Variable x:TypeArguments="x:String" Name="Attachment" />
                </Sequence.Variables>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="364,91" sap2010:WorkflowViewState.IdRef="LogMessage_16" Level="Error" Message="[&quot;Exception Report does not contain any data to process and Exception Report name is  - &quot;+exceptionReportFileName]" />
                <Assign DisplayName="Assign Subject Mail" sap:VirtualizedContainerService.HintSize="364,60" sap2010:WorkflowViewState.IdRef="Assign_22">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[subjectMail]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[storeNumberWeeklyScheduleReport+" Exception Report contains no data"]</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign DisplayName="Assign Body Mail" sap:VirtualizedContainerService.HintSize="364,60" sap2010:WorkflowViewState.IdRef="Assign_21">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[bodyMail]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[storeNumberWeeklyScheduleReport+" ExceptionReportLandscape.xlsx didn't contain any records to process."]</InArgument>
                  </Assign.Value>
                </Assign>
                <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke WriteStatusRemarkWeeklyReport workflow" sap:VirtualizedContainerService.HintSize="364,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_5" UnSafe="False" WorkflowFileName="Files\WriteStatusRemarkWeeklyReport.xaml">
                  <ui:InvokeWorkflowFile.Arguments>
                    <InArgument x:TypeArguments="sd:DataTable" x:Key="in_WeeklyReportDT">[in_WeeklyReportDT]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_Status">Failed</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_Remarks">No Data is Available for Exception Report</InArgument>
                    <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_Config]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_StoreNumberWeeklyScheduleReport">[storeNumberWeeklyScheduleReport]</InArgument>
                  </ui:InvokeWorkflowFile.Arguments>
                </ui:InvokeWorkflowFile>
                <ui:MoveFile ContinueOnError="{x:Null}" Destination="[in_Config(&quot;InvalidFiles_ReportPath&quot;).ToString]" DisplayName="Move File- Exception Report" sap:VirtualizedContainerService.HintSize="364,157" sap2010:WorkflowViewState.IdRef="MoveFile_13" Overwrite="True" Path="[in_Config(&quot;Exception_ARSFolder&quot;).ToString+ExceptionReportFileName]">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:MoveFile>
                <Assign DisplayName="Assign Excp Attachment" sap:VirtualizedContainerService.HintSize="364,60" sap2010:WorkflowViewState.IdRef="Assign_28">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[Attachment]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[Directory.GetFiles(in_Config("InvalidFiles_ReportPath").ToString,storeNumberWeeklyScheduleReport+"*.xlsx")(0)]</InArgument>
                  </Assign.Value>
                </Assign>
                <Throw DisplayName="Throw - BusinessRule Exception" Exception="[New BusinessRuleException(subjectMail+&quot;$&quot;+bodyMail+&quot;$&quot;+Attachment+&quot;$&quot;+storeNumberWeeklyScheduleReport)]" sap:VirtualizedContainerService.HintSize="364,22" sap2010:WorkflowViewState.IdRef="Throw_8" />
              </Sequence>
            </If.Else>
          </If>
        </Sequence>
      </If.Then>
      <If.Else>
        <Sequence DisplayName="Sequence- No Exception Report in Input Folder" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="Sequence_6">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="314,91" sap2010:WorkflowViewState.IdRef="LogMessage_5" Level="Info" Message="[&quot;No Exception files available in Input Folder&quot;]" />
          <Assign DisplayName="Assign Subject Mail" sap:VirtualizedContainerService.HintSize="314,60" sap2010:WorkflowViewState.IdRef="Assign_29">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[subjectMail]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">ARS - No Exception files under Input Folder</InArgument>
            </Assign.Value>
          </Assign>
          <Assign DisplayName="Assign Body Mail" sap:VirtualizedContainerService.HintSize="314,60" sap2010:WorkflowViewState.IdRef="Assign_30">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[bodyMail]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">["The Exception file is unavailable so bot cannot process the store at this moment. Please make sure the Exception file is saved under corresponding ""Input Files"" folder."]</InArgument>
            </Assign.Value>
          </Assign>
          <Throw DisplayName="Throw - Exception" Exception="[New Exception(subjectMail+&quot;$&quot;+bodyMail)]" sap:VirtualizedContainerService.HintSize="314,22" sap2010:WorkflowViewState.IdRef="Throw_9" />
        </Sequence>
      </If.Else>
    </If>
  </Sequence>
</Activity>